{"version":3,"sources":["../src/server/index.ts"],"sourcesContent":["import { type IoContract, type TsIoServerAdapter, type TsIoServerEmitter } from '@ts-io/core'\nimport { Socket } from 'socket.io'\nimport { v4 as uuidv4 } from 'uuid'\n\ntype TsIoScoketIoSocket = Socket & { id?: string }\n\nfunction createSocketIoServerProxy<Contract extends IoContract>(\n  socket: TsIoScoketIoSocket\n): TsIoServerAdapter<Contract> {\n  const emitToClient: TsIoServerEmitter = (socketId, response) => {\n    const { event, data } = response\n    // @FIXME: BROADCAST TO ALL CLIENTS FOR TESTING PURPOSES\n    // socket.broadcast.emit(event, data)\n    socket.to(socketId).emit(event, data)\n  }\n\n  return {\n    emitTo: (to, event, data) => {\n      const messageId = uuidv4()\n      const response = { messageId, event, data }\n      emitToClient(to, response)\n    },\n    // acknowledge: output => {\n    //   return output\n    // },\n    on: (event, handler) => {\n      socket.on(event as string, (data, callback) => {\n        handler(data, output => {\n          callback({ data: output })\n        })\n      })\n    },\n  }\n}\n\nexport { createSocketIoServerProxy }\n"],"mappings":";AAEA,SAAS,MAAM,cAAc;AAI7B,SAAS,0BACP,QAC6B;AAC7B,QAAM,eAAkC,CAAC,UAAU,aAAa;AAC9D,UAAM,EAAE,OAAO,KAAK,IAAI;AAGxB,WAAO,GAAG,QAAQ,EAAE,KAAK,OAAO,IAAI;AAAA,EACtC;AAEA,SAAO;AAAA,IACL,QAAQ,CAAC,IAAI,OAAO,SAAS;AAC3B,YAAM,YAAY,OAAO;AACzB,YAAM,WAAW,EAAE,WAAW,OAAO,KAAK;AAC1C,mBAAa,IAAI,QAAQ;AAAA,IAC3B;AAAA;AAAA;AAAA;AAAA,IAIA,IAAI,CAAC,OAAO,YAAY;AACtB,aAAO,GAAG,OAAiB,CAAC,MAAM,aAAa;AAC7C,gBAAQ,MAAM,YAAU;AACtB,mBAAS,EAAE,MAAM,OAAO,CAAC;AAAA,QAC3B,CAAC;AAAA,MACH,CAAC;AAAA,IACH;AAAA,EACF;AACF;","names":[]}